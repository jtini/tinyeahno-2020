{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/images/Share-Image.png","webpack:///./src/pages/404.tsx"],"names":["Layout","children","className","SEO","description","lang","meta","title","site","metaDescription","siteMetadata","siteUrl","htmlAttributes","titleTemplate","name","content","property","shareImage","author","concat","link","rel","href","defaultProps","module","exports","NotFoundPage"],"mappings":"4IA8BeA,IAlBA,SAAC,GAAmE,IAAjEC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,UACb,OAUb,OACE,6BACE,0BAAMA,UAAWA,GAAYD,M,iHCZnC,SAASE,EAAT,GAAiH,IAAlGC,EAAkG,EAAlGA,YAAaC,EAAqF,EAArFA,KAAMC,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,MAC9BC,EADuG,OACvGA,KAeFC,EAAkBL,GAAeI,EAAKE,aAAaN,YACnDO,EAAUH,EAAKE,aAAaC,QAElC,OACE,kBAAC,IAAD,CACEC,eAAgB,CACdP,QAEFE,MAAOA,EACPM,cAAa,QAAUL,EAAKE,aAAaH,MACzCD,KAAM,CACJ,CACEQ,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAASR,GAEX,CACES,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACEC,SAAU,WACVD,QAASE,KAEX,CACED,SAAU,iBACVD,QAAS,MAEX,CACEC,SAAU,kBACVD,QAAS,KAEX,CACED,KAAM,eACNC,QAAS,sBAEX,CACED,KAAM,kBACNC,QAASP,EAAKE,aAAaQ,QAE7B,CACEJ,KAAM,gBACNC,QAASR,GAEX,CACEO,KAAM,sBACNC,QAASN,GAEX,CACEK,KAAM,gBACNC,QAASE,MAEXE,OAAOb,GACTc,KAAM,CACJ,CACEC,IAAK,YACLC,KAAMX,MAOhBR,EAAIoB,aAAe,CACjBlB,KAAM,KACNC,KAAM,GACNF,YAAa,IAGAD,O,8HCzGfqB,EAAOC,QAAU,IAA0B,2D,oCCA3C,wDAaeC,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnB,MAAM,mBACX,yCACA,yF","file":"component---src-pages-404-tsx-1bbac5038f2da091f027.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"../styles/import-once.scss\"\n\n\nconst Layout = ({ children, className }: { children: any, className?: string }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      <main className={className}>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport shareImage from '../images/Share-Image.png'\n\nfunction SEO({ description, lang, meta, title }: { description: string, lang: string, meta: [], title: string }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const siteUrl = site.siteMetadata.siteUrl\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: shareImage,\n        },\n        {\n          property: `og:image:width`,\n          content: 1200,\n        },\n        {\n          property: `og:image:height`,\n          content: 630,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_card_large`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `twitter:image`,\n          content: shareImage,\n        },\n      ].concat(meta)}\n      link={[\n        {\n          rel: 'canonical',\n          href: siteUrl\n        },\n      ]}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","module.exports = __webpack_public_path__ + \"static/Share-Image-9cb0e04feb8160cf5a3c42e6ceb13f58.png\";","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}